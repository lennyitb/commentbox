#!/usr/bin/env ruby

# cbwiz - an executable tool for the commentbox ruby gem by Lenny
# github.com/lennyitb/commentbox

require 'commentbox'

$HELP_MSG = %q(Usage: cbwiz [options] [text]
Options:
	-t, --text [text]         Text to be commented. Optional flag for first argument
	-a, --align [l1, l2...]   Alignment of text: left, center, right
	-s, --style [style]       Style of comment box: stub, window, parallax, zigzag, or money
	-p, --padding [padding]   Padding of comment box
	-o, --offset [offset]     Offset of comment box
	-w, --stretch [stretch]   Stretch of comment box
	-m, --minwidth [minwidth] Minimum width of comment box (like a more absolute stretch)
	-sl, --spacelines         Remove space lines (default true)
	-h, --help                Display this help message
)

def help_and_exit
	puts $HELP_MSG
	exit
end

if ARGV.empty?
	help_and_exit
end
# if the :text parameter is first, the -t flag is optional
mode = :text
options = {}
# for each argument:
#   if it's a switch, set the `mode` symbol
#   if it's a value, set/append to the coresponding `mode` key in `options`
ARGV.each do |arg|
	case arg
	when '-h', '--help', 'help', '-?', '--?'
		help_and_exit
	when '-t', '--text'
		mode = :text
	when '-a', '--align', '--alignment'
		mode = :alignment
	when '-s', '--style'
		mode = :style
	when '-p', '--padding'
		mode = :padding
	when '-o', '--offset'
		mode = :offset
	when '-w', '--stretch'
		mode = :stretch
	when '-m', '--minwidth', '--min_width', '--min-width'
		mode = :min_width
	when '-sl', '--spacelines'
		mode = :spacelines
		# default is true so if it's mentioned, we implicitly assume false
		# although it remains possible to explicitly specify true
		options[:spacelines] = false
	else
		# every argv that gets here is not a switch
		if options[mode].nil?
			options[mode] = arg
		else
			# hacky line to make sure anything with multiple arguments comes out as a flat array
			options[mode] = ([ options[mode] ] << arg).flatten
		end
	end
end
# finally, unescape newlines in text
options[:text] = options[:text].gsub('\n', "\n")

puts CommentBox.new options